// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/CoreumFoundation/coreumbridge-xrpl/relayer/client/xrpl (interfaces: RPCTxProvider)

// Package xrpl is a generated GoMock package.
package xrpl

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	data "github.com/rubblelabs/ripple/data"
)

// MockRPCTxProvider is a mock of RPCTxProvider interface.
type MockRPCTxProvider struct {
	ctrl     *gomock.Controller
	recorder *MockRPCTxProviderMockRecorder
}

// MockRPCTxProviderMockRecorder is the mock recorder for MockRPCTxProvider.
type MockRPCTxProviderMockRecorder struct {
	mock *MockRPCTxProvider
}

// NewMockRPCTxProvider creates a new mock instance.
func NewMockRPCTxProvider(ctrl *gomock.Controller) *MockRPCTxProvider {
	mock := &MockRPCTxProvider{ctrl: ctrl}
	mock.recorder = &MockRPCTxProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRPCTxProvider) EXPECT() *MockRPCTxProviderMockRecorder {
	return m.recorder
}

// AccountTx mocks base method.
func (m *MockRPCTxProvider) AccountTx(arg0 context.Context, arg1 data.Account, arg2, arg3 int64, arg4 map[string]interface{}) (AccountTxResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AccountTx", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(AccountTxResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AccountTx indicates an expected call of AccountTx.
func (mr *MockRPCTxProviderMockRecorder) AccountTx(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AccountTx", reflect.TypeOf((*MockRPCTxProvider)(nil).AccountTx), arg0, arg1, arg2, arg3, arg4)
}

// LedgerCurrent mocks base method.
func (m *MockRPCTxProvider) LedgerCurrent(arg0 context.Context) (LedgerCurrentResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LedgerCurrent", arg0)
	ret0, _ := ret[0].(LedgerCurrentResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LedgerCurrent indicates an expected call of LedgerCurrent.
func (mr *MockRPCTxProviderMockRecorder) LedgerCurrent(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LedgerCurrent", reflect.TypeOf((*MockRPCTxProvider)(nil).LedgerCurrent), arg0)
}
